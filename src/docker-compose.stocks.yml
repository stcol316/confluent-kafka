services:

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: ${BROKER_NAME}
    container_name: ${BROKER_NAME}
    ports:
      - ${KAFKA_CLIENT_PORT}:${KAFKA_CLIENT_PORT}
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${BROKER_NAME}:${BROKER_LISTENER_PORT},PLAINTEXT_HOST://localhost:${KAFKA_CLIENT_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@${BROKER_NAME}:${BROKER_CONTROLLER_PORT}
      KAFKA_LISTENERS: PLAINTEXT://${BROKER_NAME}:${BROKER_LISTENER_PORT},CONTROLLER://${BROKER_NAME}:${BROKER_CONTROLLER_PORT},PLAINTEXT_HOST://0.0.0.0:${KAFKA_CLIENT_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server ${BROKER_NAME}:${BROKER_LISTENER_PORT} --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  stock-producer:
    build:
      context: .
      dockerfile: ./producers/Dockerfile
    container_name: producer
    depends_on:
      broker:
        condition: service_healthy
      stock-processor:
        condition: service_started
    environment:
      KAFKA_BROKER: ${BROKER_NAME}:${BROKER_LISTENER_PORT}
    command: python stock_producer.py

  jobmanager:
    image: flink:latest
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 30s
      timeout: 10s
      retries: 3

  taskmanager:
    image: flink:latest
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        taskmanager.memory.process.size: 1728m
    scale: 1

  stock-processor:
    build:
      context: .
      dockerfile: ./processors/Dockerfile
    container_name: stock-processor
    depends_on:
      broker:
        condition: service_healthy
      jobmanager:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=${BROKER_NAME}:${BROKER_LISTENER_PORT}
      - FLINK_JOBMANAGER_HOST=jobmanager
      - FLINK_JOBMANAGER_PORT=6123
    volumes:
      - ./processors:/opt/processors
    command: python stock_processor.py
  